global:
  domain: null
  imagePullSecret: {}
srv:
  bindings:
    auth:
      serviceInstanceName: xsuaa
    saas-registry:
      serviceInstanceName: saas-registry
    service-manager:
      fromSecret: null
  image:
    repository: <your-container-registry>/bookshop-srv
    tag: latest
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-mtxs-configmap"
        tpl: true
approuter:
  bindings:
    auth:
      serviceInstanceName: xsuaa
  image:
    repository: <your-container-registry>/bookshop-approuter
    tag: latest
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-approuter-configmap"
        tpl: true
xsuaa:
  serviceOfferingName: xsuaa
  servicePlanName: application
  parameters:
    xsappname: bookshop
    tenant-mode: shared
    oauth2-configuration:
      redirect-uris:
        - https://*.<your-cluster-domain>/**
  config: xs-security.json
saas_registry:
  serviceOfferingName: saas-registry
  servicePlanName: application
  getDependencies: "/-/cds/saas-provisioning/dependencies"
  onSubscription: "/-/cds/saas-provisioning/tenant/{tenantId}"
approuterDestinations: {}
